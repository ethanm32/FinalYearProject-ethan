@model WebApplication4.Models.BigModel
@using System;
@using System.Collections.Generic;
@using System.Linq;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<nav class="navbar navbar-fixed-top">
    <div class="container" id="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <div style="position:relative; top: 20px;" class="logo"><a href='@Url.Action("HomePage", "User")'><img src="https://i.ibb.co/TvLjbq4/Playback-logos-transparent.png" alt="Logo" width="100" height="100" style="position:absolute;top: -35px;" /></a></div>
        </div>
        <div id="navbar-collapse" class="main collapse navbar-collapse">
            <ul class="nav navbar-nav navbar-right">
                <li class="profile"><a href='@Url.Action("Profile", "User")'><img style="border-radius: 50%; border: none; width: 20px; height: 20px;background-size:cover" src="data:image/png;base64,@Convert.ToBase64String(Model.UserModel.picture)" /> @Html.DisplayFor(o => o.UserModel.username)</a></li>

            </ul>
        </div>
    </div>
</nav>
<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<br />
<br />

@using (Html.BeginForm("AddImage", "User", FormMethod.Post, new { enctype = "multipart/form-data", id = "imageForm" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div style="display: flex; align-items: center; background-image: linear-gradient(to bottom, #212121, #14181C); padding-top: 20px; padding-bottom: 20px; " class="imageOnTop">
        <input title="Click to Update Image" style="border-radius: 50%; border: none; width: 150px; height: 150px; background-image: url('data:image/png;base64,@Convert.ToBase64String(Model.UserModel.picture)');font-size:0;background-size:cover;color:none" onchange="backgroundChangeprofile(event);" type="file" class="form-control-file" id="picturePro" name="picturePro" accept="image/*">
        <h1 style="margin-left: 20px;margin-bottom: 0;">@Html.DisplayFor(o => o.UserModel.name)</h1>
        <h4 style="margin: 0; margin-left: -90px; margin-bottom: 40px;">Profile</h4>
    </div>


}




<h1>Playlists:</h1>
<div id="playlists">
    @{
        List<string> playlists = new List<string>();

        var name = @Html.DisplayFor(o => o.PlaylistModel.playlistname).ToString();

        playlists = name.Split(',').ToList();



    }
    @if (TempData["ErrorMessage"] != null)
    {
        <script>
            $(document).ready(function () {
                $('#cantCreate').modal('show');
            });</script>
    }


    <div style="display: flex; align-items: center; flex-wrap: wrap; justify-content: center;">
        @for (int i = 0; i < playlists.Count; i++)
        {
            <div style="display: flex; flex-direction: column; align-items: center; margin-right: 10px; margin-bottom: 10px;">
                <img style="border-radius: 10px;width:100px;height: 100px;" src="~/defaultPic/playlist.png" />
                <br />
                <input type="button" onclick="location.href='@Url.Action("Playlist", "User", new {playlistname = playlists[i].ToString()})'" value="@playlists[i]" style="width: 100px; overflow: hidden; text-overflow: ellipsis; background-color: chocolate;border-radius: 10px;border:none;" />
                <br />
            </div>
        }
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#playlistModal">+</button>
    </div>





    <div id="addNew">

        @using (Html.BeginForm("CreatePlaylist", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="modal fade modal-dark" id="playlistModal" tabindex="-1" role="dialog" aria-labelledby="playlistModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header modal-header-borderless">
                            <h5 class="modal-title" id="playlistModalLabel">Create Playlist</h5>

                        </div>

                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-4 text-center">
                                    <input style=" border-radius: 50%; border: none; width: 150px; height: 150px; background-color: #ddd;font-size:0;color:none" onchange="backgroundChange(event);" type="file" class="form-control-file" id="picture" name="picture" accept="image/*">
                                </div>
                                <div class="col-md-6 col-sm-6" id="recipient-name" style="position:relative; top: 20px;">
                                    <div class="form-group">
                                        @Html.EditorFor(o => o.PlaylistModel.playlistname, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(o => o.PlaylistModel.playlistname, "", new { @class = "text-danger" })
                                    </div>
                                    <br />
                                    <button type="submit" class="btn btn-primary" style="float:right;">Save</button>

                                </div>
                            </div>
                            <br />

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>

<div>
    <hr />
    <h1>Your Details</h1>
    <br />
    <h3>Username: @Html.DisplayFor(o => o.UserModel.username) </h3>
    <h3>Email: @Html.DisplayFor(o => o.UserModel.email) </h3>
    <br />
    <button id="logout" style="background-color: chocolate;border-radius: 10px;border:none;" onclick="location.href='@Url.Action("Logout", "User")'">Logout</button>

</div>

<div class="modal fade modal-dark" id="cantCreate" tabindex="-1" role="dialog" aria-labelledby="playlistModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header modal-header-borderless">
                <h5 class="modal-title" id="playlistModalLabel">Create Playlist</h5>
            </div>
            <div class="modal-body">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div  role="alert">
                        @TempData["ErrorMessage"]
                    </div>
                }
                <br />
            </div>
        </div>
        <br />
    </div>
</div>



<script>

    //ensures the image changes when one is chosen. 
    function backgroundChange(event) {
        var input = event.target;
        var reader = new FileReader();
        reader.onload = function (e) {
            var picture = document.getElementById("picture")
            picture.style.backgroundImage = "url('" + e.target.result + "')";
            picture.style.borderRadius = "50 %;"
            picture.style.width = "150px;"
            picture.style.height = "150px;"
            picture.style.backgroundSize = "cover";
        }
        reader.readAsDataURL(input.files[0]);
    }

    //does the same as above but for the profile image
    function backgroundChangeprofile(event) {
        var input = event.target;
        var reader = new FileReader();
        reader.onload = function (e) {
            var picture = document.getElementById("picturePro")
            picture.style.backgroundImage = "url('" + e.target.result + "')";
            picture.style.borderRadius = "50 %;"
            picture.style.width = "150px;"
            picture.style.height = "150px;"
            picture.style.backgroundSize = "cover";
        }
        reader.readAsDataURL(input.files[0]);
        document.getElementById("imageForm").submit();
    }


    $(window).on("load", function () {
        $('.form-control').attr('placeholder', 'Name');
    })

</script>

<style>
    #playlist2 {
        position: absolute;
        top: 590px;
        left: 900px;
        float: right;
    }

    p, h1, h2 {
        color: white;
    }

    body {
        color: white;
    }


    .modal-dark .modal-content {
        background-color: #343541;
        color: #8E919B;
    }

    .modal-header {
        border-bottom: 0 none;
    }

    .modal-footer {
        border-top: 0 none;
    }

   
    .form-control {
        border-radius: 10px;
        background-color: #343541;
        opacity: 0.5;
        color: white;
        position: relative;
        z-index: 2;
    }


    #navbar-collapse {
        background-image: linear-gradient(to bottom, #212121, #202020);
        padding-right: 10px;
        padding-left: 10px;
    }

    .text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        opacity: 0;
        background-color: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 10px;
        transition: opacity 0.3s ease-in-out;
    }

    .imageOnTop {
        position: relative;
        display: inline-block;
    }

    .overlay-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        visibility: hidden;
        opacity: 0;
        transition: visibility 0s, opacity 0.5s ease;
        font-size: 18px;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.7);
        padding: 10px;
        border-radius: 5px;
        z-index: 1;
    }

    .update-button {
        font-size: 18px;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.7);
        padding: 10px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

    .imageOnTop:hover .overlay-text {
        visibility: visible;
        opacity: 1;
    }

    input[type=button] {
        max-width: 1000px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .icon-bar {
        background-color: white;
    }



    #logout {
        position: absolute;
        left: 49%;
        transform: translateX(-50%);
        height: 50px;
        width: 100px;
    }
</style>

