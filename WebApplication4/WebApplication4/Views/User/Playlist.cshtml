@using System.Collections.Generic;
@model IEnumerable<WebApplication4.Models.PlaylistModel> 


@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<!DOCTYPE html>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    @{
        var title = Model.FirstOrDefault()?.playlistname;
    }
    <title>@title</title>

</head>





<body>
    <h1></h1>
    @for (int i = 0; i < 1; i++)
    {
        var playlist = Model.FirstOrDefault();
        if (playlist?.picture != null && playlist.picture.Length > 0)
        {
            <img src="data:image/png;base64,@Convert.ToBase64String(playlist.picture)" />
        }
    }

    <div id="playlist">
        @foreach (var item in Model)
        {
            <div class="playlistItem">
                <img class="img-responsive center-block img-rounded" src=@item.img><p id="hidden">
                    Name:@item.trackname<br>Artist:@item.artist
                    <br>Link:https://p.scdn.co/mp3-preview/241189aa54503d502d3e06cf6996a87a27f73a81?cid=13825d1ddbcb4eb98c5265c4f453510e<br>
                <p class="genres">Id:@item.genre</p><br>Artists:0epOFNiUfyON9EYx7Tpr6V</p><p>@item.trackname</p><p class="artist">@item.artist<br></p>
            </div>
        }
    </div>
    <div id="plots">
        <div id="myPlot" style="width:100%;max-width:700px"></div>
        <div id="myPlot2" style="width:100%;max-width:700px"></div>
    </div>
    <button onclick="dataShow()">Your data</button>
    <button onclick="playlistShow()">Your tracks</button>
    <script>
        var genreList = []
        var accessToken = null;
        window.onload = function getApiAccess() {

            const CLIENT_ID = '13825d1ddbcb4eb98c5265c4f453510e';
            const CLIENT_SECRET = '8e98f1bda24f4581acfeaed2b4bac525';
            var authParams = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: 'grant_type=client_credentials&client_id=' + CLIENT_ID + '&client_secret=' + CLIENT_SECRET
            }

            fetch('https://accounts.spotify.com/api/token', authParams)
                .then(response => response.json())
                .then(data => accessToken = data.access_token)
                .then(() => console.log(accessToken))
                .then(() => localStorage.setItem("access", accessToken))
        }

        var playlist = localStorage.getItem("playlist");

        $(document).ready(function () {
            $('.playlistItem').click(function () {
                var value = $(this).get(0).outerHTML;
                console.log(value);
                localStorage.setItem("storageName", value);
                var genre = value.substring(value.indexOf("d:") + 2, value.lastIndexOf('<br>A'));

                    $.ajax({
                        type: "post",
                        dataType: "json",
                        url: "/User/TrackId",
                        data: {
                            genre: genre,
                        },
                        success: function (data) {
                            console.log(data.message);
                            window.open('@Url.Action("Song", "User")');
                        },
                    });


                });
            });

        var search = setTimeout(function () {
            var trackParams = {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + accessToken
                }
            }

            var genres = $('.genres').map(function () {
                return $(this).text().substr(3, this.length)
            }).get();


           var promises = []

            for (var i = 0; i < genres.length; i++) {
                var promise = fetch('https://api.spotify.com/v1/artists/' + genres[i], trackParams)
                    .then(response => response.json())
                    .then(result => {
                        console.log(result.genres);
                        genreList.push(...result.genres);
                    });
                promises.push(promise)
            }

            Promise.all(promises)
                .then(() => {
                    //console.log(genreList)
                    addGenre(genreList)
            });
        }, 500);


        function addGenre(genreList) {
            for (var i = 0; i < genreList.length; i++) {
                var genre = genreList[i];
                if (genreOccurences[genre]) {
                    genreOccurences[genre]++
                } else {
                    genreOccurences[genre] = 1
                }
            }

            var uniqueGenres = Object.keys(genreOccurences)
            var countGenres = Object.values(genreOccurences);

            console.log(uniqueGenres);
            console.log(countGenres);

            var xGenre = uniqueGenres
            var yGenre = countGenres

            var layout = { plot_bgcolor: 'rgba(0,0,0,0)', paper_bgcolor: '#14181C', title: "Most listened to Genres" };

            var data = [{ labels: xGenre, values: yGenre, type: "pie" }];

            Plotly.newPlot("myPlot2", data, layout);
        }

        var artists = $('.artist').toArray();

        var occurences = {}

        var genreOccurences = {}

        for (var i = 0; i < artists.length; i++) {
            var artist = artists[i].textContent;
            if (occurences[artist]) {
                occurences[artist]++
            } else {
                occurences[artist] = 1
            }
        }

        var uniqueArtists = Object.keys(occurences)
        var count = Object.values(occurences);

        console.log(uniqueArtists)
        console.log(count)




        var xArray = uniqueArtists
        var yArray = count

        var layout = { plot_bgcolor: 'rgba(0,0,0,0)', paper_bgcolor: '#14181C', title: "Most listened to Artists" };

        var data = [{ labels: xArray, values: yArray, type: "pie" }];

        Plotly.newPlot("myPlot", data, layout);


        function dataShow() {
            document.getElementById("plots").style.display = "block";
            document.getElementById("playlist").style.display = "none";
        }

        function playlistShow() {
            document.getElementById("plots").style.display = "none";
            document.getElementById("playlist").style.display = "block";
        }
    </script>

    <style>
        #plots {
            display: none;
        }
    </style>
</body>
</html>
